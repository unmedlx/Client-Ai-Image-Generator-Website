import React, { useState, useEffect } from "react";
import { Loader, Card, FormField } from "../components";
import { URL } from "../constants/index";

const RenderCard = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [posts, setPosts] = useState(null);

  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch(`${URL}/api/v1/post`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const result = await response.json();
        console.log(result);
        setPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  const searchHandle = (e) => {
    e.preventDefault();
    let search = searchText.toLowerCase();

    setSearchText(e.target.value);
    console.log(searchText);

    setTimeout(() => {
      const searchItems = posts.filter(
        (item) =>
          item.name.toLowerCase().includes(search) ||
          item.prompt.toLowerCase().includes(search) ||
          item.name.toLowerCase().includes(search)
      );

      setSearchedResults(searchItems);
    }, 500);
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <section className="max-w-7xl mx-auto">
      <div className="flex justify-center">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">
            The Community showcase
          </h1>
          <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
            Collection of Ai imaginative picture generated by Dall-E Api
          </p>
        </div>
      </div>

      <div className="mt-10">
        <FormField
          type="text"
          name="search"
          placeholder="Search ðŸ”Ž .."
          value={searchText}
          handleChange={searchHandle}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2>
                Showing result for{" "}
                <span className="text-[cyan]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap3">
              {searchText ? (
                <RenderCard
                  data={searchedResults}
                  title="No Search Results Found"
                />
              ) : (
                <RenderCard data={posts} title="No post found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
